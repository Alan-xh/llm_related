{"query": "如何给用户分配权限", "answer": "在 MEPER 低代码平台中，权限管理分为页面权限和按钮权限，通过管理项 → 权限模块进行配置，支持基于用户和角色的权限分配。以下是详细的权限分配流程：\n## 1. 配置页面权限\n页面权限是所有按钮权限的前提条件，必须先赋予页面权限，按钮权限才能生效。\n步骤：\n进入PC端菜单维护或移动端菜单维护。\n在权限配置中找到菜单树，在左侧勾选需要开放的页面权限。\n保存配置，确保用户可以访问该页面。\n重要提示：配置完成后，需在PC端页面维护或移动端页面维护页面点击【应用更改】按钮，权限配置才能立即生效。\n## 2. 配置按钮权限\n按钮权限用于细粒度控制具体的操作权限。\n步骤：\n在低代码设计器中，选中按钮，在基本样式选项中勾选权限管控，开启按钮权限。\n注意：如果按钮权限开启，但对应的页面权限未开启，按钮权限不会生效。\n重要提示：配置完成后，需在PC端页面维护或移动端页面维护页面点击【应用更改】按钮，权限配置才能立即生效。\n## 3. 用户与角色权限的分配\nMEPER 平台支持两种权限分配方式：\n基于用户分配：\n直接为某个用户配置权限。例如，在用户权限管理中分配权限 A。\n基于角色分配：\n为角色配置权限，赋予用户该角色即可获得对应权限。例如，在角色权限管理中分配权限 B。\n权限计算方式：\n用户权限和角色权限是并集关系，即用户拥有的最终权限 = 个人权限 ∪ 角色权限。\n## 4. 查看和管理系统权限\n在管理项 → 权限模块，可以：\n查看当前系统中的所有权限项。\n按照用户或角色维度进行权限分配和调整。\n## 5. 重要注意事项\n先配置页面权限，按钮权限才能生效。\n用户权限和角色权限是并集关系，权限不会相互覆盖。\n配置权限后，需在 PC端页面维护 或 移动端页面维护 页面点击 【应用更改】 按钮，权限配置才能立即生效。\n可以在管理项 → 权限中查看和调整权限分配情况。\n"}
{"query": "如何配置菜单？", "answer": "在 MEPER 低代码平台中，菜单的配置是全界面化操作，无需编写代码。用户可以在页面配置与管理模块下的PC端菜单维护和移动端菜单维护界面中完成菜单的创建和管理。以下是详细的配置步骤和注意事项。\n## 1. 进入菜单管理界面\n进入PC端菜单维护或移动端菜单维护，可以看到一个菜单树，上方提供了多个操作按钮。\n## 2. 创建菜单组\n菜单组是一级模块，用于组织多个菜单项：\n创建根菜单组：点击菜单组按钮，即可在根目录下创建一个新的模块，它将显示在系统主页上。\n创建子菜单组：选中一个已有菜单组，点击菜单组按钮，即可在该菜单组下创建一个子菜单组。\n## 3. 新增菜单\n在选中的菜单组下，点击增加菜单按钮，即可创建新的菜单项：\n路径（URL 路由）：每个菜单对应一个路由路径，同一父菜单下的路径不能重复。\n关联页面（设计页面）：\n在设计页面下拉框中选择已发布的页面（通过低代码拖拽生成的页面）。\n只有已发布的页面才能被选中。\n注意：如果选用了ViewClass，则无需配置设计页面（二者互斥）。\nViewClass（代码实现页面）：\nViewClass 是 Spring 容器中的 Vaadin 14 视图类，用于配置代码实现的页面。\n如果选择了 ViewClass，则不需要配置设计页面。\n## 4. 配置菜单层级\n菜单节点（父级菜单）：可以将新菜单配置到已有菜单下，形成多层级菜单结构。\n## 5. 其他关键属性\n是否显示：\n勾选 ✅：该菜单将在菜单组下可见。\n取消勾选 ❌：该菜单不会显示，但仍可被访问（适用于详情页等情况）。\n类别（PATH_URL）：\n支持配置外部链接，选择PATH_URL后，可在浏览器中新开标签页打开该 URL。\n排序：\n控制菜单的显示顺序，数值越小，排序越靠前。\n## 6. 重要注意事项\n✔ 先发布页面，才能在菜单配置时选中它。\n✔设计页面&ViewClass互斥，二者选其一。\n✔ 同一父菜单下的 URL 路由不能重复，避免冲突。\n✔ 隐藏菜单（未勾选“是否显示”）仍可通过 URL 访问，适用于详情页等特殊需求。\n通过以上配置，用户可以灵活管理 MEPER 平台的菜单，确保系统结构清晰、页面访问合理。\n"}
{"query": "如何使用 Action Flow?", "answer": "## 1. 什么是 Action Flow？\nAction Flow 是由一系列 Action（动作）组成的工作流，在低代码设计器中，用户可以通过拖拽不同的 Action 组件，直观地创建和编辑业务逻辑，而无需编写代码。\n\n在 Action Flow 中，每个节点都代表一个 Action，它是一种原子性的操作。例如：\n- 在“新增”按钮上绑定一个 Action Flow，可以包含“弹出框”操作，以及“接收弹出框返回值”的操作，整个流程即为一个 Action Flow。\n## 2. 什么是 Action？\nAction 是低代码设计器中的最小业务操作单元，用于构建 Action Flow。在 MEPER 低代码平台中，支持多种 Action，包括但不限于：\n常见的 Action 类型：\n弹出框：显示一个弹出窗口\n侧边弹出框：显示一个从侧边滑出的弹出框\nAPI 调用：外部或内部 API 调用\n导航：页面跳转到指定 URL 或视图\n确认框：显示一个确认对话框\n提示框：显示消息通知（成功、错误、警告等）\n删除对象：触发删除数据的操作\n提交：保存数据提交表单或保存数据到数据库\nSQL 脚本：执行 SQL 语句\nScript：执行自定义 JavaScript 脚本\n关闭弹出框：关闭当前打开的弹出框\n关闭浏览器：关闭当前浏览器窗口\n刷新组件：重新加载某个组件的数据\n获取组件值：读取某个组件的数据值\n设置组件值：赋值给某个组件\n启用/置灰组件：控制组件是否可用\n过滤器：过滤数据集合\n发布事件：触发自定义事件\n显示/隐藏组件：控制组件的可见性\n上传文件：处理文件上传逻辑\n导出：生成并下载文件\n邮件发送：发送邮件通知\n设置 BPMN：业务数据处理 BPMN 业务流程相关数据\n打印机：发送数据到打印机进行打印\n## 3. 如何使用 Action Flow？\n1. 进入 Action Flow 设计器\n1. 进入 MEPER 低代码设计器。\n2. 选中某个控件（如“新增”按钮）。\n3. 在界面下方找到 Tab 切换栏，点击 “流程” 选项。\n4. 此时会显示 Action Flow 设计页面，在这里可以自由拖拽和组合 Action 以满足业务需求。\n5. 在使用 Action 时，可以定义一些参数，以适配不同的业务场景。\n2. 添加 Action 节点\n1. 在设计器中拖拽需要的 Action（例如“弹出框”）。\n2. 通过连接线，将 Action 连接成完整的逻辑流程。\n3. 如果需要处理回调值（如弹出框返回数据），可以添加一个接收弹出框返回的 Action。\n3. 配置 Action 参数\n1. 选中某个 Action，在右侧面板中配置参数，例如：\n    - 弹出框的标题、内容\n    - API 请求的地址、请求参数\n    - 设置组件值时，选择目标组件和赋值内容\n2. 确保每个 Action 配置正确，避免逻辑错误。\n4. 运行并测试 Action Flow\n1. 点击 保存，确保流程无误。\n2. 在设计器中运行或预览 Action Flow。\n3. 根据实际执行情况，调整和优化 Action Flow 逻辑。\n## 4. Action Flow 的优势\n✅可视化配置：通过拖拽操作完成业务流程设计。\n✅无代码开发：无需编写代码即可完成业务逻辑。\n✅可扩展性强：支持 API 调用、SQL 执行、自定义脚本等高级功能。\n✅提高开发效率：快速构建复杂的前端交互和数据处理逻辑。\n## 5. 适用场景\n表单交互：提交表单数据、数据校验。\n数据操作：调用 API、执行 SQL 语句、刷新组件数据。\n用户交互：弹出框、提示框、导航跳转。\n自动化流程：基于 BPMN 业务数据，执行自动化任务。\n"}
{"query": "如何创建低代码页面？", "answer": "本指南将详细介绍如何在 Meper 低代码平台中创建一个低代码页面，包括页面的添加、设计、保存与发布等步骤。\n## 1. 进入页面列表\n在 MEPER 的【二次开发模块】中，找到【页面列表】。\n路径：在 MEPER 的【二次开发模块】中，找到【页面列表】。\n功能：页面列表展示系统中所有低代码页面的 Grid 清单，类似于一个概览表格。\n## 2. 添加新页面\n点击页面列表左上角的【添加】按钮，弹出新增页面窗口，需要填写以下字段：\n名称：页面的名称（例如“用户注册页”）。\n类别：页面的分类（例如“表单类”或“展示类”）。\n版本号：页面版本（例如“1.0”）。\nController 类：低代码控制器，需填写 Java 全类名（例如com.example.MyController），用于后台逻辑支持。\n类型：选择页面适配设备，支持【电脑】或【Mobile】。\n模板：选择预设模板（如果有），决定页面初始布局。\n描述：简要说明页面功能或用途（例如“用于用户数据录入”）。\n确认：填写完成后，点击【确定】进入低代码设计器。\n## 3. 使用低代码设计器\n根据页面类型，选择相应的设计器进行页面设计。\n设计器类型：\nPC 设计器：适用于电脑端页面设计。\nMobile 设计器：适用于移动端页面设计。\n操作方式：\n通过拖拽组件（例如按钮、文本框、表格等）实现页面布局和功能。\n根据需求调整样式和交互逻辑。\n功能示例：\n添加一个表单：拖入输入框和提交按钮。\n显示数据：拖入表格并绑定数据源。\n## 4. 保存与发布\n保存：点击设计器上方的【保存】按钮，仅保存当前设计进度，不对外可见。\n发布：点击【发布】按钮，使页面生效并可被菜单引用。\n版本管理（类似 Git 流程）：\n检出：拉取页面进行编辑。\n提交：将修改提交至版本控制。\n确保多人协作时版本一致。\n## 5. 后续使用\n发布后的页面可以通过菜单导航引用，用户即可访问。\n示例：创建一个“用户信息录入”页面\n假设你需要创建一个移动端页面，用于录入用户姓名、年龄和邮箱。以下是具体步骤：\n1. 进入页面列表\n打开【二次开发模块】 > 【页面列表】。\n2. 添加页面\n名称：用户信息录入\n类别：表单\n版本号：1.0\nController 类：com.meper.form.UserFormController\n类型：Mobile\n模板：空白模板\n描述：用于录入用户基本信息\n点击【确定】。\n3. 设计页面\n进入 Mobile 设计器。\n拖拽组件：\n一个文本输入框（标签：姓名）。\n一个数字输入框（标签：年龄）。\n一个邮箱输入框（标签：邮箱）。\n一个提交按钮（标签：提交）。\n设置提交按钮的动作：调用 Controller 类中的方法保存数据。\n4. 保存与发布\n先点击【保存】预览效果。\n确认无误后点击【发布】。\n5. 结果\n页面可在移动端菜单中访问，用户可以输入信息并提交。\n"}
{"query": "如何创建数据字典？", "answer": "本指南将详细介绍如何在系统中创建和维护数据字典，以及如何在开发中使用数据字典。\n## 步骤一：进入数据字典页面并创建基本信息\n进入页面\n打开系统中的【数据字典】页面。\n添加数据字典\n点击页面中的【添加】按钮，进入数据字典创建页面。\n填写基本信息\n名称：数据字典的名称，例如“性别”或“生产类型”。\n类别：数据字典所属的分类，用于区分不同用途的数据字典。\n保存基本信息\n填写完成后，点击【保存】按钮，保存数据字典的基本信息。\n## 步骤二：维护数据字典的详细内容\n选中记录\n在数据字典列表中，选中需要维护的记录。\n进入编辑模式\n点击【编辑】按钮，进入数据字典的详细内容编辑页面。\n输入详细内容\n键：数据的唯一标识符，例如“1”表示“男”，“2”表示“女”。\n值：键对应的具体内容，例如“男”或“女”。\n是否有效：标记该条数据是否可用，通常为“是”或“否”。\n国际化文本：支持多语言环境时，填写对应的翻译文本（可选）。\n描述：对该条数据的补充说明，便于理解其用途（可选）。\n保存内容\n填写完成后，点击【保存】按钮，保存数据字典的详细内容。\n## 步骤三：在开发中使用数据字典\n创建并维护好数据字典后，可以在低代码设计器或具体开发场景中调用。以下是常见的使用场景：\n在表单设计中：\n将数据字典绑定到下拉框，实现选项的动态加载。\n例如，性别数据字典可以绑定到用户表单中的“性别”字段。\n在代码开发中：\n通过数据字典的名称或类别获取对应的键值对，用于逻辑处理。\n例如，根据用户选择的“生产类型”数据字典，动态调整业务流程。\n## 注意事项\n命名规范：\n数据字典的名称和类别应简洁明了，方便后续维护和调用。\n内容完整性：\n确保键值对齐，避免遗漏常用选项。\n例如，性别数据字典应包含“男”和“女”，以及其他可能的选项（如“未知”）。\n权限管理：\n根据系统设置，可能需要管理员权限才能创建或编辑数据字典。\n确保只有授权人员可以进行数据字典的维护操作。\n## 示例：创建一个“性别”数据字典\n假设你需要创建一个名为“性别”的数据字典，以下是具体步骤：\n1. 创建基本信息\n名称：性别\n类别：用户属性\n2. 维护详细内容\n| 键 | 值   | 是否有效 | 国际化文本 | 描述          |\n|----|------|----------|------------|---------------|\n| 1  | 男   | 是       | Male       | 男性选项      |\n| 2  | 女   | 是       | Female     | 女性选项      |\n| 3  | 未知 | 是       | Unknown    | 性别不明选项  |\n3. 使用数据字典\n在表单设计中，将“性别”数据字典绑定到下拉框，用户可以选择“男”、“女”或“未知”。\n在代码中，可以通过数据字典的名称“性别”获取键值对\n"}
{"query": "项目与 JBF 文件详解：概念、使用方法及导入导出操作", "answer": "本指南将详细介绍项目和 JBF 文件的概念、作用，以及如何在 MEPER 系统中进行导入和导出操作。\n## 项目是什么？如何使用？\n项目概述\n项目可以理解为一组 JBF（JSON-based files）的集合，用于统一管理一个 MES（制造执行系统）项目中的各种配置与数据。通过项目，可以将自定义表、菜单、页面、数据字典等多种类型的数据进行打包和分组，从而实现高效的数据迁移、备份和共享。\n项目的作用\n统一管理：将 MES 项目中的各种配置和数据统一管理，避免数据分散。\n高效迁移：通过项目迁移，只需导出一个项目即可包含所有相关的 JBF 资源，避免逐一导出的繁琐操作。\n数据一致性：确保在迁移过程中数据的完整性和一致性。\n项目的子项\n项目包含以下子项：\n-自定义表：存储项目特定的业务数据结构。\n-扩展属性：用于增强数据模型的灵活性。\n-数据字典：定义标准化的数据字段。\n-序列号：管理系统中的唯一标识符。\n-设计页面：存储可视化页面的布局和配置。\n-菜单：定义项目的功能导航结构。\n-看板设计：配置项目的数据可视化面板。\n-其他：包含项目可能涉及的其他配置项。\n通过项目的管理方式，可以大大提升系统迁移、备份和共享的便捷性，使整个 MES 项目的运维更加高效。\n导出项目\n在 MEPER 系统中，导出项目时，系统会生成一个包含所有相关 JBF 文件的压缩包（如.zip文件）。然而，根据你的要求，导出的内容不再是以.zip包的形式，而是直接导出为.jbf文件。以下是导出项目的具体步骤：\n进入项目管理页面\n打开 MEPER 系统中的【项目管理】页面。\n选择目标项目\n从项目列表中选择需要导出的项目。\n导出项目\n点击【导出】按钮，系统将生成一个包含所有相关 JBF 文件的.jbf文件。\n导出的文件通常以.jbf格式保存，内部包含各种 JBF 文件。\n保存导出文件\n将导出的.jbf文件保存到本地，以便后续导入到其他系统。\n导入项目\n在 MEPER 系统中，导入项目时，只需将导出的.jbf文件上传到目标系统，系统会自动解析并导入其中的 JBF 文件。以下是导入项目的具体步骤：\n进入目标系统\n打开目标 MEPER 系统的【项目管理】页面。\n导入项目\n点击【导入】按钮，选择之前导出的.jbf文件。\n系统会自动解析.jbf文件，并将其导入到目标项目中。\n确认导入\n导入完成后，系统会提示导入成功。此时，目标系统中将包含与源系统一致的功能模块、菜单、页面、自定义表等。\n验证数据\n进入目标系统的相关模块（如页面管理、菜单管理等），验证导入的数据是否完整且正确。\n注意事项\n权限管理：导入和导出操作通常需要管理员权限。\n数据一致性：确保导入和导出的项目版本一致，避免数据冲突。\n备份数据：在进行导入操作前，建议对目标系统的现有数据进行备份，以防误操作导致数据丢失。\n## JBF 文件是什么？\nJBF 文件是 MEPER 低代码开发平台特有的文件格式，主要用于数据迁移。在 MEPER 中，JBF 文件作为数据源文件的载体，能够在不同的 MEPER 系统之间传输数据。\nJBF 文件的作用\n数据迁移：通过 JBF 文件，用户可以便捷地导出 MEPER 系统的相关数据，并在其他 MEPER 实例中进行导入，实现高效的数据迁移与配置同步。\n数据存储：JBF 文件可以存储 MEPER 系统中的绝大部分对象和数据，包括但不限于：\n自定义表\n数据字典\n国际化文件\n页面\n菜单\n工作流\nJBF 文件的优势\n高效性：支持快速导入和导出，提升数据迁移效率。\n兼容性：适用于不同 MEPER 系统之间的数据传输。\n完整性：能够完整存储系统中的各种配置和数据。\n## 如何在各个系统中导入和导出功能模块、菜单、页面、自定义表等？\n在 MEPER 系统中，功能模块、菜单、页面、自定义表等对象可以通过 JBF 文件进行导入和导出。这使得在不同 MEPER 系统间迁移数据和配置变得更加便捷。\n1. JBF 文件是什么？\nJBF 文件是 MEPER 特有的数据载体，在数据迁移过程中，MEPER 通过 JBF 文件存储和传输各种系统对象，包括但不限于：\n- 功能模块\n- 菜单、页面\n- 自定义表\n- 数据字典\n- 国际化文件\n- 工作流\n等\nJBF 文件的导入导出功能使得系统可以在不同环境（如开发、测试、生产）之间快速迁移配置，避免重复手动配置，提高效率。\n2. 如何导出 JBF 文件？\n在 MEPER 系统中，导出 JBF 文件的入口位于：\n二次开发模块 → 工具备份 → 对象备份\n具体导出步骤\n进入页面\n打开 MEPER 系统中的【二次开发模块】，然后进入【工具备份】，选择【对象备份】页面。\n选择需要导出的内容\n选择需要导出的功能模块、菜单、页面、自定义表等对象。\n选择导出方式\n你可以选择：\n导出整个项目：如果已将相关模块维护为一个项目。\n导出具体的自定义表、菜单、页面等单独的对象。\n导出 JBF 文件\n系统会生成.jbf文件并提供下载。\n下载文件\n下载.jbf文件并妥善保存，以备后续导入使用。\n3. 如何导入 JBF 文件？\n在另一个 MEPER 系统中，你可以按照以下方式导入.jbf文件，实现数据迁移：\n具体导入步骤\n进入目标系统\n打开目标 MEPER 系统的【二次开发模块】，然后进入【工具备份】，选择【对象备份】页面。\n选择导入 JBF 文件\n点击【导入 JBF 文件】。\n上传.jbf文件\n上传之前导出的.jbf文件，系统会自动解析其中的数据。\n选择导入策略\n选择是否合并或覆盖现有数据（具体策略可根据系统配置调整）。\n确认导入\n确认导入并等待系统处理，导入完成后可查看日志，确保数据迁移成功。\n4. JBF 文件的应用场景\n系统迁移：将功能模块从测试环境迁移到正式环境。\n版本管理：导出当前系统配置作为备份，后续可以随时恢复。\n快速部署：在新系统中快速导入已配置的功能，无需重复设置。\n跨系统同步：在多个 MEPER 系统之间共享相同的功能模块、菜单、页面等。\n5. 注意事项\nJBF 版本兼容性：不同版本的 MEPER 系统可能会有 JBF 文件格式差异，建议在相同或兼容的系统版本间迁移。\n权限控制：只有具备相应权限的管理员才能执行导入导出操作。\n数据冲突：在导入时，如果目标系统已存在相同的数据项，需确认是否覆盖或合并，避免数据冲突。\n备份机制：在执行导入操作前，建议先备份系统数据，以防误操作导致数据丢失。\n总结\n通过项目和 JBF 文件，可以高效地管理、迁移和共享 MES 项目中的各种配置和数据。以下是关键点：\n-项目：统一管理多种 JBF 资源，提升迁移和备份的便捷性。\n-JBF 文件：作为数据迁移的载体，支持高效的数据导入和导出。\n-导入导出流程：通过简单的导出和导入操作，即可实现功能模块、菜单、页面、自定义表等的迁移。\n希望以上内容能帮助你更好地理解和使用项目与 JBF 文件！如有任何问题，请随时查阅相关文档或联系技术支持。\n"}
{"query": "如何配置国际化", "answer": "在 MEPER 系统中，国际化（i18n）配置有两种方式：页面配置和代码配置。MEPER 页面上目前支持中文、英文、中文（台湾地区）三种语言。\n## 1. 通过页面配置国际化\nMEPER 提供可视化的国际化配置功能，可以在管理界面中直接维护国际化文本。\n配置入口\n进入国际化文本模块\n打开 MEPER 系统中的【二次开发模块】，然后进入【页面配置与管理】，选择【国际化文本模块】。\n在国际化文本模块中，找到【数据字典类型】进入。\n操作步骤\n添加国际化文本\n点击【添加】按钮，系统会侧弹出国际化模块。\n在弹出窗口中维护以下基本信息：\n名称：国际化文本的名称。\n类别：国际化文本所属的分类。\n描述：对该国际化文本的补充说明。\n点击右上角【确认】保存数据。\n配置具体的国际化内容\n在列表中选择刚刚新建的国际化数据项。\n点击右上角【编辑】，进入编辑界面。\n配置中文、英文、中文（台湾地区）对应的国际化文本。\n保存后，系统会自动应用该国际化配置。\n示例\n假设需要配置一个国际化文本，名称为“页面或版本”，以下是具体步骤：\n-名称：页面或版本\n-类别：页面相关\n-描述：用于页面和版本的标题\n在编辑界面中，配置以下内容：\n-中文：页面或版本\n-英文：Page Or Version\n-中文（台湾地区）：頁面或版本\n保存后，系统会自动应用该国际化配置。\n## 2. 通过代码配置国际化\n除了可视化管理界面，MEPER 也支持在代码中直接配置国际化文本。\n国际化文件存放位置\n国际化文件通常位于：\nresources/locale/xxx_I18_Nomal_en_US.properties\n在该文件中，维护对应语言的键值对，例如：\n英文国际化文件 (xxx_I18_Nomal_en_US.properties)\nlumos.designer.pageeditor.pageorversion=Page Or Version\n中文国际化文件 (xxx_I18_Nomal_zh_CN.properties)\nlumos.designer.pageeditor.pageorversion=页面或版本\n代码中使用国际化文本\n在代码中，可以通过 I18NUtility 工具类获取国际化文本：\nStringtext = I18NUtility.getValue(\"lumos.designer.pageeditor.pageorversion\",\"Page Or Version\");\n如果 \"lumos.designer.pageeditor.pageorversion\" 在国际化文件中找不到对应的键，则会返回默认值 \"Page Or Version\"。\n## 3. 总结\nMEPER 提供了两种国际化配置方式：\n方式 1（页面配置）：\n适合非开发人员使用，可在国际化文本模块中进行可视化管理，直接维护不同语言的文本。\n方式 2（代码配置）：\n适合开发人员，通过 properties 文件维护国际化文本，并在代码中使用 I18NUtility.getValue() 进行调用。\n这两种方式可以结合使用，确保系统在不同语言环境下都能正确显示用户界面文本。\n"}
